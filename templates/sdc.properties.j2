#
# Copyright 2017 StreamSets Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# A unique identifier for the datacollector, if not set <hostname>:<http.port> is used.
# <hostname> is resolved using 'hostname -f'
{% if sdc_id is defined %}
sdc.id={{ sdc_id }}
{% endif %}

# HTTP configuration

# The base URL of the datacollector, used to create email alert messages.
# If not set http://<hostname>:<http.port> is used
# <hostname> is either taken from http.bindHost or resolved using
# 'hostname -f' if not configured.
#sdc.base.http.url=http://<hostname>:<port>
{% if sdc_base_http_url is defined %}
sdc.base.http.url={{ sdc_base_http_url }}
{% endif %}

# Hostname or IP address that data collector will bind to.
# Default is 0.0.0.0 that will bind to all interfaces.
#http.bindHost=0.0.0.0
{% if sdc_bind_host is defined %}
http.bindHost={{ sdc_bind_host }}
{% endif %}

# Maximum number of HTTP servicing threads.
#http.maxThreads=200

# The port the data collector runs the SDC HTTP endpoint.
# If different that -1, the SDC will run on this port
# If 0, the SDC will pick up a random port
# If the https.port is different that -1 or 0 and http.port is different than -1 or 0, the HTTP endpoint
# will redirect to the HTTPS endpoint.
http.port={{ http_port | default(18630) }}

# HTTPS configuration

# The port the data collector runs the SDC HTTPS endpoint.
# If different that -1, the SDC will run over SSL on this port
# If 0, the SDC will pick up a random port
https.port={{ https_port | default(-1) }}

# Reverse Proxy / Load Balancer configuration

# SDC will handle X-Forwarded-For, X-Forwarded-Proto, X-Forwarded-Port
# headers issued by a reverse proxy such as HAProxy, ELB, nginx when set to true.
# Set to true when hosting SDC behind a reverse proxy / load balancer.
http.enable.forwarded.requests={{ http_enable_forwarded_requests | default("false") }}

# Java keystore file, in the SDC 'etc/' configuration directory
https.keystore.path={{ sdc_keystore_path | default("keystore.jks") }}

# Password for the keystore file,
# By default, the password is loaded from the 'keystore-password.txt'
# from the SDC 'etc/' configuration directory
https.keystore.password={{ sdc_keystore_password | default('${file("keystore-password.txt")}') }}

# Path to keystore file on worker node. This should always be an absolute location
https.cluster.keystore.path={{ https_cluster_keystore_path | default("/opt/security/jks/sdc-keystore.jks") }}

# Password for keystore file on worker
https.cluster.keystore.password={{ https_cluster_keystore_password | default('${file("/opt/security/jks/keystore-password.txt")}') }}

# Truststore configs
# By default, if below configs are commented then cacerts from JRE lib directory will be used as truststore

# Java truststore file on gateway sdc which stores certificates to trust identity of workers
{% if https_truststore_path is defined %}
https.truststore.path={{ https_truststore_path }}
{% endif %}

# Password for truststore file
{% if https_truststore_password is defined %}
https.truststore.password={{ https_truststore_password }}
{% endif %}

# Path to truststore file on worker node. This should always be an absolute location
{% if https_cluster_truststore_path is defined %}
https.cluster.truststore.path={{ https_cluster_truststore_path }}
{% endif %}

# Password for truststore file on worker
{% if https_cluster_truststore_password is defined %}
https.cluster.truststore.password={{ https_cluster_truststore_password }}
{% endif %}

# HTTP Session Timeout
# Max period of inactivity, after which the HTTP session is invalidated, in seconds.
# Default value is 86400 seconds (24 hours)
# value -1 means no timeout
http.session.max.inactive.interval={{ http_session_max_inactive_interval | default(86400) }}

# The authentication for the HTTP endpoint of the data collector
# Valid values are: 'none', 'basic', 'digest', or 'form'
#
http.authentication={{ http_authentication | default("form") }}

# Authentication Login Module
# Valid values are: 'file' and 'ldap'
# For 'file', the authentication and role information is read from a property file (etc/basic-realm.properties,
#   etc/digest-realm.properties or etc/form-realm.properties based on the 'http.authentication' value).
# For 'ldap', the authentication and role information is read from a LDAP Server
#   and LDAP connection information is read from etc/ldap-login.conf.
http.authentication.login.module={{ http_authentication_login_module | default("file") }}

# The realm used for authentication
# A file with the realm name and '.properties' extension must exist in the data collector configuration directory
# If this property is not set, the realm name is '<http.authentication>-realm'
{% if http_digest_realm is defined %}
http.digest.realm={{ http_digest_realm }}
{% endif %}

# Check the permissions of the realm file should be owner only
http.realm.file.permission.check={{ http_realm_file_permission_check | default("true") }}

# LDAP group to Data Collector role mapping
# the mapping is specified as the following pattern:
#    <ldap-group>:<sdc-role>(,<sdc-role>)*(;<ldap-group>:<sdc-role>(,<sdc-role>)*)*
# e.g.
#    Administrator:admin;Manager:manager;DevOP:creator;Tester:guest;
http.authentication.ldap.role.mapping={{ http_authentication_ldap_role_mapping | default("") }}

# LDAP login module name as present in the JAAS config file.
# If no value is specified, the login module name is assumed to be "ldap"
ldap.login.module.name={{ ldap_login_module | default("ldap") }}

# HTTP access control (CORS)
http.access.control.allow.origin={{ http_access_control_allow_origin | default("*") }}
http.access.control.allow.headers={{ http_access_control_allow_headers | default("origin, content-type, accept, authorization, x-requested-by, x-ss-user-auth-token, x-ss-rest-call") }}
http.access.control.allow.methods={{ http_access_control_allow_methods | default("GET, POST, PUT, DELETE, OPTIONS, HEAD") }}

# Runs the data collector within a Kerberos session which is propagated to all stages.
# This is useful for stages that require Kerberos authentication with the services they interact with
kerberos.client.enabled={{ kerberos_client_enabled | default("false") }}

# The kerberos principal to use for the Kerberos session.
# It should be a service principal. If the hostname part of the service principal is '_HOST' or '0.0.0.0',
# the hostname will be replaced with the actual complete hostname of the data collector as advertised by the
# unix command 'hostname -f'
kerberos.client.principal={{ kerberos_client_principal | default("sdc/_HOST@EXAMPLE.COM") }}

# The location of the keytab file for the specified principal. If the path is relative, the keytab file will be
# looked under the data collector configuration directory
kerberos.client.keytab={{ kerberos_client_keytab | default("sdc.keytab") }}

preview.maxBatchSize={{ preview_max_batch_size | default(10) }}
preview.maxBatches={{ preview_max_batches | default(10) }}

production.maxBatchSize={{ production_max_batch_size | default(1000) }}

# Specifies the buffer size for Overrun parsers - including JSON, XML and CSV.
# This parameter is specified in bytes, and must be greater than
# 1048576 bytes (which is the default size).
{% if parser_limit is defined %}
parser.limit={{ parser_limit }}
{% endif %}

# This option determines the number of error records, per stage, that will be retained in memory when the pipeline is
# running. If set to zero, error records will not be retained in memory.
# If the specified limit is reached the oldest records will be discarded to make room for the newest one.
production.maxErrorRecordsPerStage={{ production_max_error_records_per_stage | default(100) }}

# This option determines the number of pipeline errors that will be retained in memory when the pipeline is
# running. If set to zero, pipeline errors will not be retained in memory.
# If the specified limit is reached the oldest error will be discarded to make room for the newest one.
production.maxPipelineErrors={{ production_max_pipeline_errors | default(100) }}

# Max number of concurrent REST calls allowed for the /rest/v1/admin/log endpoint
max.logtail.concurrent.requests={{ max_logtail_concurrent_requests | default(5) }}

# Max number of concurrent WebSocket calls allowed
max.webSockets.concurrent.requests={{ max_websockets_concurrent_requests | default(15) }}

# Monitor memory of stages. Use only to test real-world load usage in test or production environments.
monitor.memory={{ monitor_memory | default("false") }}

# Pipeline Sharing / ACLs
pipeline.access.control.enabled={{ pipeline_access_control_enabled | default("false") }}

# Customize header title for SDC UI
# You can pass any HTML tags here
# Example:
#   For Text  -  <span class="navbar-brand">New Brand Name</span>
#   For Image -  <img src="assets/add.png">
ui.header.title={{ ui_header_title | default("") }}

ui.local.help.base.url=/docs
ui.hosted.help.base.url=https://www.streamsets.com/documentation/datacollector/{{ sdc_version }}/userguide/help

ui.refresh.interval.ms={{ ui_refresh_interval_ms | default(2000) }}
ui.jvmMetrics.refresh.interval.ms={{ ui_jvm_metrics_refresh_interval | default(4000) }}

# SDC sends anonymous usage information using Google Analytics to StreamSets.
ui.enable.usage.data.collection={{ ui_enable_usage_data_collection | default("true") }}

# If true SDC UI will use WebSocket to fetch pipeline status/metrics/alerts otherwise UI will poll every few seconds
# to get the Pipeline status/metrics/alerts.
ui.enable.webSocket={{ ui_enable_websocket | default("true") }}

# Number of changes supported by undo/redo functionality.
# UI archives Pipeline Configuration/Rules in browser memory to support undo/redo functionality.
ui.undo.limit={{ ui_undo_limit | default(10) }}

# SMTP configuration to send alert emails
# All properties starting with 'mail.' are used to create the JavaMail session, supported protocols are 'smtp' & 'smtps'
mail.transport.protocol={{ mail_transport_protocol | default("smtp") }}
mail.smtp.host={{ mail_smtp_host | default("localhost") }}
mail.smtp.port={{ mail_smtp_port | default(25) }}
mail.smtp.auth={{ mail_smtp_auth | default("false") }}
mail.smtp.starttls.enable={{ mail_smtp_starttls_enable | default("false") }}
mail.smtps.host={{ mail_smtps_host | default("localhost") }}
mail.smtps.port={{ mail_smtps_port | default(465) }}
mail.smtps.auth={{ mail_smtps_auth | default("false") }}
# If 'mail.smtp.auth' or 'mail.smtps.auth' are to true, these properties are used for the user/password credentials,
# ${file("email-password.txt")} will load the value from the 'email-password.txt' file in the config directory (where this file is)
xmail.username={{ xmail_username | default("foo") }}
xmail.password={{ xmail_password | default('${file("email-password.txt")}') }}
# FROM email address to use for the messages
xmail.from.address={{ xmail_from_address | default("sdc@localhost") }}

#Indicates the location where runtime configuration properties can be found.
#Value 'embedded' implies that the runtime configuration properties are present in this file and are prefixed with
#'runtime.conf_'.
#A value other than 'embedded' is treated as the name of a properties file from which the runtime configuration
#properties must be picked up. Note that the properties should not be prefixed with 'runtime.conf_' in this case.
runtime.conf.location={{ runtime_conf_location | default("embedded") }}

# Java Security properties
#
# Any configuration prefixed with 'java.security.<property>' will be set on the static instance java.security.Security
# as part of SDC bootstrap process. This will change JVM configuration and should not be used when embedding and running
# multiple SDC instances inside the same JVM.
#
# We're explicitly overriding this to zero as JVM will default to -1 if security manager is active.
java.security.networkaddress.cache.ttl=0

# Stage specific configuration(s)
# The following config properties are for particular stages, please refer to their documentation for further details.

# Hadoop components
# Uncomment to enforce Hadoop components in SDC to always impersonate current user rather then use the impersonation
# configuration option. Current user is a user who either started the pipeline or run preview.
stage.conf_hadoop.always.impersonate.current.user={{ stage_conf_hadoop_always_impersonate_current_user | default("false") }}
# Uncomment to enforce impersonated user name to be lower cased.
stage.conf_hadoop.always.lowercase.user={{ stage_conf_hadoop_always_lowercase_user | default("false") }}

# Shell executor
# Controls impersonation mode
stage.conf_com.streamsets.pipeline.stage.executor.shell.impersonation_mode=CURRENT_USER
# Relative or absolute path to shell that should be used to execute the shell script
stage.conf_com.streamsets.pipeline.stage.executor.shell.shell={{ stage_conf_com_streamsets_pipeline_stage_executor_shell_shell | default("sh") }}
# Relative or absolute path to sudo command
stage.conf_com.streamsets.pipeline.stage.executor.shell.sudo={{ stage_conf_com_streamsets_pipeline_stage_executor_shell_sudo | default("sudo") }}

#Observer related

#The size of the queue where the pipeline queues up data rule evaluation requests.
#Each request is for a stream and contains sampled records for all rules that apply to that lane.
observer.queue.size={{ observer_queue_size | default(100) }}

#Sampled records which pass evaluation are cached for user to view. This determines the size of the cache and there is
#once cache per data rule
observer.sampled.records.cache.size={{ observer_sampled_records_cache_size | default(100) }}

#The time to wait before dropping a data rule evaluation request if the observer queue is full.
observer.queue.offer.max.wait.time.ms={{ observer_queue_offer_max_wait_time_ms | default(1000) }}


#Maximum number of private classloaders to allow in the data collector.
#Stage that have configuration singletons (i.e. Hadoop FS & Hbase) require private classloaders
max.stage.private.classloaders={{ max_stage_private_classloaders | default(50) }}
# Pre-multiplier size of the thread pool.

# Default value is sufficient to run 22 pipelines.
# One pipeline requires 5 Threads and pipelines share threads using thread pool.
# Approximate runner thread pool size = (Number of Running Pipelines) * 2.2
# Increasing this value will not increase parallelisation of individual pipelines.
runner.thread.pool.size={{ runner_thread_pool_size | default(50) }}

# Uncomment to disable starting all previously running pipelines on SDC start up
runner.boot.pipeline.restart={{ runner_bood_pipeline_restart | default("true") }}

# Maximal number of runners (multithreaded pipelines)
#
# Maximal number of source-less pipeline instances (=runners) that are allowed for a single multi-threaded
# pipeline. The default is 50.
pipeline.max.runners.count={{ pipeline_max_runners_count | default(50) }}

# Support bundles
# 
# Uncomment if you need to disable the facility for automatic support bundle upload.
bundle.upload.enabled={{ bundle_upload_enabled | default("true") }}

# Uncomment to automatically generate and upload bundle on various errors. Enable with caution, uploading bundle
# can be time consuming task (depending on size and internet speed) and pipelines can appear "frozen" during
# the upload especially when many pipelines are failing at the same time.
bundle.upload.on_error={{ bundle_upload_on_error | default("false") }}

# Library aliases mapping to keep backward compatibility on pipelines when library names change
# The current aliasing mapping is to handle 1.0.0beta2 to 1.0.0 library names changes
#
# IMPORTANT: Under normal circumstances all these properties should not be changed
#
library.alias.streamsets-datacollector-apache-kafka_0_8_1_1-lib=streamsets-datacollector-apache-kafka_0_8_1-lib
library.alias.streamsets-datacollector-apache-kafka_0_8_2_0-lib=streamsets-datacollector-apache-kafka_0_8_2-lib
library.alias.streamsets-datacollector-apache-kafka_0_8_2_1-lib=streamsets-datacollector-apache-kafka_0_8_2-lib
library.alias.streamsets-datacollector-cassandra_2_1_5-lib=streamsets-datacollector-cassandra_2-lib
library.alias.streamsets-datacollector-cdh5_2_1-lib=streamsets-datacollector-cdh_5_2-lib
library.alias.streamsets-datacollector-cdh5_2_3-lib=streamsets-datacollector-cdh_5_2-lib
library.alias.streamsets-datacollector-cdh5_2_4-lib=streamsets-datacollector-cdh_5_2-lib
library.alias.streamsets-datacollector-cdh5_3_0-lib=streamsets-datacollector-cdh_5_3-lib
library.alias.streamsets-datacollector-cdh5_3_1-lib=streamsets-datacollector-cdh_5_3-lib
library.alias.streamsets-datacollector-cdh5_3_2-lib=streamsets-datacollector-cdh_5_3-lib
library.alias.streamsets-datacollector-cdh5_4_0-cluster-cdh_kafka_1_2_0-lib=streamsets-datacollector-cdh_5_4-cluster-cdh_kafka_1_2-lib
library.alias.streamsets-datacollector-cdh5_4_0-lib=streamsets-datacollector-cdh_5_4-lib
library.alias.streamsets-datacollector-cdh5_4_1-cluster-cdh_kafka_1_2_0-lib=streamsets-datacollector-cdh_5_4-cluster-cdh_kafka_1_2-lib
library.alias.streamsets-datacollector-cdh5_4_1-lib=streamsets-datacollector-cdh_5_4-lib
library.alias.streamsets-datacollector-cdh_5_4-cluster-cdh_kafka_1_2_0-lib=streamsets-datacollector-cdh_5_4-cluster-cdh_kafka_1_2-lib
library.alias.streamsets-datacollector-cdh_kafka_1_2_0-lib=streamsets-datacollector-cdh_kafka_1_2-lib
library.alias.streamsets-datacollector-elasticsearch_1_4_4-lib=streamsets-datacollector-elasticsearch_1_4-lib
library.alias.streamsets-datacollector-elasticsearch_1_5_0-lib=streamsets-datacollector-elasticsearch_1_5-lib
library.alias.streamsets-datacollector-hdp_2_2_0-lib=streamsets-datacollector-hdp_2_2-lib
library.alias.streamsets-datacollector-jython_2_7_0-lib=streamsets-datacollector-jython_2_7-lib
library.alias.streamsets-datacollector-mongodb_3_0_2-lib=streamsets-datacollector-mongodb_3-lib
library.alias.streamsets-datacollector-cassandra_2-lib=streamsets-datacollector-cassandra_3-lib

# Stage aliases for mapping to keep backward compatibility on pipelines when stages move libraries
# The current alias mapping is to handle moving the jdbc stages to their own library
#
# IMPORTANT: Under normal circumstances all these properties should not be changed
#
stage.alias.streamsets-datacollector-basic-lib,com_streamsets_pipeline_stage_destination_jdbc_JdbcDTarget=streamsets-datacollector-jdbc-lib,com_streamsets_pipeline_stage_destination_jdbc_JdbcDTarget
stage.alias.streamsets-datacollector-basic-lib,com_streamsets_pipeline_stage_origin_jdbc_JdbcDSource=streamsets-datacollector-jdbc-lib,com_streamsets_pipeline_stage_origin_jdbc_JdbcDSource
stage.alias.streamsets-datacollector-basic-lib,com_streamsets_pipeline_stage_origin_omniture_OmnitureDSource=streamsets-datacollector-omniture-lib,com_streamsets_pipeline_stage_origin_omniture_OmnitureDSource
stage.alias.streamsets-datacollector-cdh_5_7-cluster-cdh_kafka_2_0-lib,com_streamsets_pipeline_stage_destination_kafka_KafkaDTarget=streamsets-datacollector-cdh_kafka_2_0-lib,com_streamsets_pipeline_stage_destination_kafka_KafkaDTarget
stage.alias.streamsets-datacollector-elasticsearch_1_4-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_1_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_1_6-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_1_7-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_2_0-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_2_1-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_2_2-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_2_3-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_2_4-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_5_0-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_1_4-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_1_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_1_6-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_1_7-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_2_0-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_2_1-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_2_2-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_2_3-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_2_4-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget
stage.alias.streamsets-datacollector-elasticsearch_5_0-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget=streamsets-datacollector-elasticsearch_5-lib,com_streamsets_pipeline_stage_destination_elasticsearch_ToErrorElasticSearchDTarget
stage.alias.streamsets-datacollector-cdh_5_4-lib,com_streamsets_pipeline_stage_processor_spark_StandaloneSparkDProcessor=streamsets-datacollector-cdh_5_4-lib,com_streamsets_pipeline_stage_processor_spark_SparkDProcessor
stage.alias.streamsets-datacollector-cdh_5_5-lib,com_streamsets_pipeline_stage_processor_spark_StandaloneSparkDProcessor=streamsets-datacollector-cdh_5_5-lib,com_streamsets_pipeline_stage_processor_spark_SparkDProcessor
stage.alias.streamsets-datacollector-cdh_5_7-lib,com_streamsets_pipeline_stage_processor_spark_StandaloneSparkDProcessor=streamsets-datacollector-cdh_5_7-lib,com_streamsets_pipeline_stage_processor_spark_SparkDProcessor
stage.alias.streamsets-datacollector-cdh_5_8-lib,com_streamsets_pipeline_stage_processor_spark_StandaloneSparkDProcessor=streamsets-datacollector-cdh_5_8-lib,com_streamsets_pipeline_stage_processor_spark_SparkDProcessor
stage.alias.streamsets-datacollector-cdh_5_9-lib,com_streamsets_pipeline_stage_processor_spark_StandaloneSparkDProcessor=streamsets-datacollector-cdh_5_9-lib,com_streamsets_pipeline_stage_processor_spark_SparkDProcessor
stage.alias.streamsets-datacollector-cdh_5_10-lib,com_streamsets_pipeline_stage_processor_spark_StandaloneSparkDProcessor=streamsets-datacollector-cdh_5_10-lib,com_streamsets_pipeline_stage_processor_spark_SparkDProcessor


# System and user stage libraries whitelists and blacklists
#
# If commented out all stagelibraries directories are used.
#
# Given 'system' or 'user', only whitelist or blacklist can be set, if both are set the Data Collector will fail to start
#
# Specify stage library directories separated by commas
#
# The MapR stage libraries are disabled as they require manual installation step. Use setup-mapr script to enable
# the desired MapR stage library.
#
# It's important to keep the blacklist and whitelist properties on a single line, otherwise CSD's control.sh script and
# setup-mapr script will not work properly.
# 
#system.stagelibs.whitelist=
system.stagelibs.blacklist=streamsets-datacollector-mapr_5_0-lib,streamsets-datacollector-mapr_5_1-lib,streamsets-datacollector-mapr_5_2-lib,streamsets-datacollector-mapr_6_0-lib,streamsets-datacollector-mapr_6_0-mep4-lib,streamsets-datacollector-mapr_spark_2_1_mep_3_0-lib
#
#user.stagelibs.whitelist=
#user.stagelibs.blacklist=

# Stage Classpath Validation
#
# Uncomment to disable best effort validation of each stage library classpath to detect known issues with
# colliding dependencies (such as conflicting versions of the same dependency, ...). Result of the validation
# is by default only printed to log.
#stagelibs.classpath.validation.enable=false
#
# By default the validation result is only logged. Uncomment to prevent SDC to start if classpath of any
# stage library is not considered valid.
#stagelibs.classpath.validation.terminate=true

#
# Additional Configuration files to include in to the configuration.
# Value of this property is the name of the configuration file separated by commas.
#
config.includes=dpm.properties,vault.properties,credential-stores.properties


#
# Record Sampling configurations indicate the size of the subset (sample set) that must be chosen from a population (of records).
# Default configuration values indicate the sampler to select 1 out of 10000 records
#
# For better performance simplify the fraction ( sdc.record.sampling.sample.size / sdc.record.sampling.population.size )
# i.e., specify ( 1 / 40 ) instead of ( 250 / 10000 ).
sdc.record.sampling.sample.size={{ sdc_record_sampling_sample_size | default(1) }}
sdc.record.sampling.population.size={{ sdc_record_sampling_population_size | default(10000) }}

#
# Pipeline State are cached for faster access.
# Specifies the maximum number of pipeline state entries the cache may contain.
store.pipeline.state.cache.maximum.size={{ store_pipeline_state_cache_maximum_size | default(100) }}

# Specifies that each pipeline state entry should be automatically removed from the cache once a fixed duration
# has elapsed after the entry's creation, the most recent replacement of its value, or its last access.
# In minutes
store.pipeline.state.cache.expire.after.access={{ store_pipeline_state_cache_expire_after_access | default(10) }}
