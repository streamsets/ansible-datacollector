---
# defaults file for ansible-datacollector
sdc_version: 3.2.0.0
sdc_release: "streamsets-datacollector-{{ sdc_version }}"
sdc_tarball: "streamsets-datacollector-all-{{ sdc_version }}.tgz"
sdc_release_url: "http://archives.streamsets.com.s3.amazonaws.com/datacollector/{{ sdc_version }}/tarball/{{ sdc_tarball }}"
# defaults for a single instance installation
sdc_install_base: /opt/streamsets-datacollector
sdc_dist: "{{ sdc_install_base }}/{{ sdc_version }}"
sdc_instance: sdc
sdc_user: sdc
sdc_group: sdc
sdc_data_dir: "/var/lib/{{ sdc_instance }}"
sdc_resources_dir: "{{ sdc_dist }}/resources"
sdc_log_dir: "/var/log/{{ sdc_instance }}"
sdc_conf_dir: "/etc/{{ sdc_instance }}"
sdc_libexec_dir: "{{ sdc_dist }}/libexec"
# commonly tuned settings for sdc.properties.
# full list of variables can be found by looking at templates/sdc.properties.j2
http_port: 18630
https_port: -1
sdc_keystore_path: keystore.jks
sdc_keystore_password: '${file("keystore-password.txt")}'
http_authentication: form
# Use 'ldap' instead of file and configure vars prefixed with ldap to use
# LDAP or Active Directory for authentication.
http_authentication_login_module: file
# ldap_debug: "false"
# ldap_use_ldaps: "true"
# ldap_use_starttls: "false"
# ldap_hostname: "some.hostname"
# ldap_port: 636
# ldap_bind_dn: "cn=DirectoryManager"
# ldap_bind_password: "password"
# ldap_authentication_method: "simple"
# ldap_force_binding_login: "false"
# ldap_user_base_dn: "ou=people,dc=example,dc=com"
# ldap_user_rdn_attribute: "uid"
# ldap_user_id_attribute: "uid"
# ldap_user_password_attribute: "userPassword"
# ldap_user_object_class: "inetOrgPerson"
# ldap_user_filter: "uid={user}"
# ldap_role_base_dn: "ou=groups,dc=example,dc=com"
# ldap_role_name_attribute: "cn"
# ldap_role_member_attribute: "uniqueMember"
# ldap_role_object_class: "groupOfUniqueNames"
# ldap_role_filter: "member={dn}"
# LDAP group to Data Collector role mapping
# Uncomment the variable below and configure appropriately.
# The mapping is specified as the following pattern:
#    <ldap-group>:<sdc-role>(,<sdc-role>)*(;<ldap-group>:<sdc-role>(,<sdc-role>)*)*
# e.g.
# http_authentication_ldap_role_mapping: "Administrator:admin;Manager:manager;DevOP:creator;Tester:guest;"
kerberos_client_enabled: "false"
kerberos_client_principal: sdc/_HOST@EXAMPLE.COM
kerberos_client_keytab: sdc.keytab
preview_max_batch_size: 10
production_max_batch_size: 1000
production_max_error_records_per_stage: 100
production_max_pipeline_errors: 100
runtime_conf_location: embedded
# JMX Configuration
jmx_enable: false
jmx_local_only: false
# jmx_port: 3333
jmx_authenticate: false
# jmx_monitor_user: streamsetsMonitor
# jmx_monitor_password: mysecretpassword
# SSL certificate must be trusted by the JVM by default or you must configure and add it to the truststore/keystore
jmx_ssl: false
# variables for sdcd-env.sh
sdc_allow_unsupported_jdk: false
sdc_java_opts_mem: "1024m"

